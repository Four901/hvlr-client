import React from 'react'

import Image from "./cameranot.png";
import { LazyLoadImage } from "react-lazy-load-image-component";
var Buffer = require('buffer/').Buffer
const GetImage = (props) => {

    const imagei=props.bufi;
    
    if(!imagei) return  <div>
    <LazyLoadImage src={Image}
      width={300} height={350}
      alt="Image Alt"
    />
   </div>

    console.log("image ")
    
               /* const images=imagei.split(" ");
                //console.log(images)
                let newImage=[];

                for(let j=0;j<images.length;j++)
                {
                  newImage.push(Number.parseInt(images[j]))
                }

               console.log(newImage.length)
                let arr= new Uint16Array(newImage).buffer;
              // console.log(arr)

               const buf = Buffer.alloc(arr.byteLength);
               const view = new Uint8Array(arr);
               for (let i = 0; i < buf.length; ++i) {
                   buf[i] = view[i];
               }
               console.log(buf)

              // var u8 = new Uint8Array([65, 66, 67, 68]);
              // var decoder = new TextDecoder('utf8');
              // b64 = btoa(decoder.decode(buf));*/
   //let b64 = Buffer.from(view,'binary').toString('base64');
    //b64="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"
    let b64="%2F9j%2F4AAQSkZJRgABAQEAAAABAAD%2F2wBDAAwICQsJCAwLCgsODQwOEh4UEhEREiUaHBYeLCYuLSsmKikwNkU7MDMBNCkqPFI9QUdKTU5NLzpVW1RLWkVMTUr%2F2wBDAQ0ODhIQEiMUFCNKMioySkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkr%2FxAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv%2FxAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5%2Bjp6vHy8%2FT19vf4%2Bfr%2FxAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv%2FxAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4%2BTl5ufo6ery8%2FT19vf4%2Bfr%2FwAARCADwAUADASEAAhEBAxEB%2F9oADAMBAAIRAxEAPwDzvjFN%2BlOQhKaeRTKHind6YugppMD0qbsByilZaLhyjgB3pFI3dKYMbcAeYMVEanqG44R1LHHmraA3YBEYQCoqf9yByFqwaHo0B6QhqftiH%2FLFKYrC%2FuQP9QlGYc5%2Bzp%2BtACZg%2FwCfZOfc1GRAesAH0ajYLDT5ODiJRWJcMrzOQOM1MhJEWB6UmBUFCYpu1euBTCwuBSEUKwAQDSYHpSuAnGelHFIBCBTapCEpMCl10GOpOOe1S9QEoP40eQagKeM1YC80VPmNir1p%2FT8aQhhPahaBjZfxpopiJ4ulXLcYDVcS3sWovSkXkUkQPtX2FhVr7QKYCed60nmVQAJctimyybOtAdSncz7hhTVIjmoe4xMUmKkAxSYob6C6iUUDEoxQISkxQAlIaYCYpKWwAfak6dKB7hQ3SnYBF%2FSndqkbFpcUxDulNzmgQKKd0ND1H0Em6Co1pdAuWI%2FuVctfummtiuhajHNGKshCxD5zUjUAHtSfWmUOUbfxqG96J%2BNDYinTeM1mMKSmITbzSYpWBiFaTbT3Bhim1IhNtNIqrgGKTFSA2ko3QB2pvtTlsWKAKD8tBHUYKkFAC9OlHXrTWwxpb0oTg0hDx8nHalpjCT7tQ0gRai%2B6KuW33aaKZaQcn2pwq9kSIn3jUlIBOlKgzyaLXAUjP1qtqB%2BZB7GkwKeaSgYtJSJFOKSmFxKO9KwDaDSCw2jAoBiU00CQ2inZWGNbmm55qQCjjpTGN757VIDT6CCkNSAi07FVYGOTkmjvijQBZfu1CtIC7Ep8sVagX5GpxNb6FlevvTxWhlcSH%2FWHNTHFRYBAimnllUYFaIY3cPTms29b9%2BfyqWIr59qKgdg3UlAgzSUAGaM0hiUhOKYhM0ZoYCZpKQMSkpAMpKq1kUJ25paRO4UdKY9gPBo%2B9U7CBafVDYqdaX%2BOkIH%2B6aiSgDUg%2FwBWtWF%2B7Qiug8U9fStCbDE%2F1h%2BlTdaQ9hLi5EC4QZeqP2p%2FQUr9BDTcsVIwKgqWMKQmlfQYnek%2BtUIKSkAe1N5FUAU0cVKADRQISm5o8gCkzTASko6AHNFSMD70hNAg5NOA70xh%2FFxTxzTYhB96nH73bFAxT0NQr14oJuaUEgEYGDVxOVyKcUUPHQ0q8dap7CK1x%2Fsmq%2B%2BT%2B8akBvXvRip2KF20baBMTZRtoGJso20MVxMGjbSsIQ02qQWCkoASkoBjTSdqEAlJTAT%2BLFJS6jewUZpbsBD70lDAeKdQhDe9TL0pDGfxU9hwPrTEB%2B6agX71JgaECP5YzV2Lp9KcR2JezYpVrS4FW5OPzqCpeoC0UgFowaBBilIoAbijFIBMUY4pgJtpuKYMCKZjNSA3FJtpgIVpu2pAYRTSKoAxS9abBiUnepuA1qVf0pASUVUQGmpozSktQaGn7%2F1pXPIoAUdDUK8GlYo0rdv3SirMR%2BX8aqKH0Jm4Rz6CnD5fzxVEFLUeLfI67hTM1D3KEpaQgwTTqrYYUmKQBj3pKCRDRQAlNpgwpuAKAsIaQ0ANNNNIBDimnrSAjpOnY%2FhVg9RM%2FwCTRUlBQAaQiSigSEanxtziqGBqPOTUvyETLUSj5zT6DNYALArY60%2B1XCcnnNUhak5%2F1b%2FSnJzQBQ1T%2FUN%2Fvj%2BRpp55qZblBRQAUZoBi8etJn3pokN1JvpgJuFJupANLUm%2F2ouAm8%2BlJuzSAaSaTJoAQ5pOcU7gN5pKW4DKaaTldgJmgZoiMfim96oZIKnGCKkkhaiM4OfSqXcY5zTEHFS9xEoqIcSGgpGlA%2B9eegq1EOOasCX%2FAJZv9KIulGg0U9UH7g%2F9dB%2FI1WDHFRfUkXdSbuaQxd1HenfoSLmgUloMKXFW9gEwaQipEJSU9wDFN20AxDmkxRcBKSmAlN4ouBF%2BVJ05oZVhBTxxU7CsLTTTuCH08UISGtQtNjEc0o%2B7SAkWosfvGqQsadqo8tWqzGcrxTiOxJ%2FA9PTpVgUdT%2F1HP%2FPQfyNVVHy1AhduRw2PwzS7aLgLtpdtSHUNtLtpgMY4pu807iE8w0ZNAB81J81UAHNJhqA3EwaTBqRiYakwaYhMGm4NGwEf4UzFNjTHKKfSuAD9KaetFtRDuMCnrSuIGxk02mMb96pU%2B7VBYetRP%2FrTUpAXLfkYq3bcL%2BNC3KLH8D08U%2BoFDUjm2P8Avr%2FWokHy1Mx3F207bUrYkXFIBQO4uKcFpkkLZx82M%2B1RmmMSpYaBD6SqAbRikA0rSbaEAFaQimSR0lAyt1ooGL2opNjFxTWpiFWpRUjF2ZyahbrQJjlFSRfdpgIGwcUjffpAWUfb25q7btlKaQybrEw9alH602h9Cjqn%2FHuc%2FwB9f61COgqXsIWlqQHCimIUUZpICJlJNN2PVDAo1PQbRRYQ%2BkxVALTTU3DcSm5xTATNNNMBhpueaXQCsv1p2PlobAO1FT1C4tIelO4CL1qTGTijZlE33Uqm5%2BfirJJf4adH1xSAT%2FlrinP1z7UgLMUeYwxq3B9wUkUTn%2FVPUv8ADTYFHVP%2BPVh%2F00X%2BVVxk80mIXnFHNKwxVBPenBDTsAoHvS0WEwHNOp9ACkxQIbmjNUA0mkzUjGk0ymIKQ1IhhppoGQ02rsAo6UtSt7gFGaobGirEQB6moYBMxB45qsOtNCJhQPlJp9QBfv5p7DlaVwLKHESjPFW4Pu8UiiZj%2B5b1p4PvV%2BQinqP%2FAB5SevmL%2FWoV6D0qJIY7FJQhBSq%2BCaBDm%2Bagc0DFPFIDTAUmkzR0EJTKSASm9KoAptLoAlN70CENNIoAiNJVsoaKcakHoAopiG1MpwKkewx2zTRVIRODmmNUALHT5DjaaEAvmfLWhan918tKwyZv9Q%2Bacp4q4gVtR%2F49n%2F31qFTSmgFzRupAwpKBAvHFOzR1GGaM0CG5pc8U7AIxpm6lYBTTc0wG5puaEAm6kzQAZpuaHsBETiikwuJS0wFAop3AYacOBUjGdTTqqwiZelMelYLjl4NOlHAo2K6De1adlxEKXURakx5B5qOPpViIdR%2F1LD3FQfw1MgDNGakYUtNCCigYUUMQdaXFADcU2gBKYaNAuFJRqAxqSmA3pRnmkGww0namG4o6UmaWtwF70ppjYxlo6CqsAiDJqSkFxVNI1Ji2H81JIPk%2FGkMQD5eRWjacRCgRPIf3H40xPu1aQEF9%2FwAe0g9xUXQCokFxtBNFmMN1ODCgB2aaOtAD1XNOxVCDbikJpANzTcigBpFNpWAbikxVANIopAMpuKLAB4pnamxhjpRQ3YQv1oH0qVqANTCaAHR0%2FPFMQgpv8VMaJjUh6UmA5m%2BSrVp%2FqRRECxJ%2Fqfxpq9BVAQ3f%2BpeqvNSMWjFSMAKWmBHK%2BOlQrO1FyS9A25KmzTGNOabiqASo2pCDNMoAM0UgGmjtQA2kouSNamdapooXHFJzUXG%2B4g60tUIRqjpMEiUUUAJ3o680ASj7tPQZoAllQbF96tQjbHSGTSf6j8aap4qgILr%2FAFbVXB4qWLoOzSc%2BlFxoXmkxTAilXiq2OaQiaKRl4qfzz6fjQMPtJo86gQ3zz6UnnGgdhvmmk8w0xDd5o3GkJjSTSZNMdhKQ0rASU2mxjh060jCkK40nmkpgDcVHTAmpxpeYEZpV6UAP%2FhqWE80gJpmHmL%2Fd71ZhOY80bBcfJ%2Fqvxpq9K0WwENz%2FAKh%2FXFRgp74qQQ7K0blxxUjDePSjdnsKchCP8%2B3gDHpTNlLoBVuOJMe1SW5yCKaGP2UbaQg20bKBibKNlMTG7aNtINwwKaRQA3bSEVQgJ4ptPoUHSnFqmwrDaWlsMa1NxRcCUDipO1G4rkLinAcUDFqSPpTT0F0EetCAfulpAPk%2F1dIOBV2Ail5U1XUGoYx%2Bw0vlGhbiWo7yaPKxQxh060je1AMr3EdFqOeadwLBoNIQ2jtTAbS0gExSGgA4puRVANLU0mkFiPOaTFEhIKKEMSlJxRrcLDM5opDJFp9AhjU8fdpsYg%2B9UsdFxDH%2B9WhCcxilYY92xHTQflFaMCOX%2FVtj0pi1DF1JBUoFIB%2B2nbKEhjDEM0zZyaLCIZYi1VYm2ORQMm30eYKBDTIKQSUANMlJ5lMBN9IXpAN3U0mgBM03NMLElNx60ragJxiimAtMY0IYgpxpiHJUgFLYCNqkXpSW4xF61LHwabQhsgzVyDiNaEG5JJ9wU0fdpgRyfdNIv3RRYCQU4fWkNEv406kMaetIKCRrGs6X5Z6AQgoosMKDQAw0UCFooYCU00gG0GqAfTTVAIKXFS2MWmZ4NAhRTjQAimn5xQA3rT16UACfeqZOKOgFjHFPHFUASn5BTVPFJgMk705DFgdaA8yTdb9xJ%2BDU8Na%2F3ZP%2B%2BqA1JAbX%2B7Ln%2Ffp3%2Bi%2Bkv%2FfVGm4JyAmDsr%2Fi1RH72Vp6ANIrPuxtlWoAYKWgoMUUrkjaTFMBcUUAJikxQAhFGKAEoFUwClxUiGZ5pp61TGSIOKU9KQDRTzSGItOBxRYAXrU69aewicGnZ4qhCufkFNU8UnsMjamBDUgSBDT1i96AJNlPAphcdtFOwKBhis3UP9ZH9DSEMQcU7bQAu2gLxTATZRsoANtBWkAzFLxQA002gBlJRfUNxM07NPqBEaUUSYElOovoBH3pxpAC9KKOoIVetWE%2B9VgSr0pwpALJ0poqQGvUYfFCGKJDTg5oESBjUiUASrT84qtwGGWs%2B7bdJSGKOKduouK4m%2Bk3UABNJvpAN3UE0AIabTAQ0lIBtIadgYnaigCPNPFJhceKeKAI2FIaN2BKvSmHjimA6p060ASA0%2Bna4hsnSkpMYhqLHNACqKlVTSDcmUelSCgY4ZY%2FLTjAR%2FrDsqhFeSWJOnNU2bzJCaQDgaQ0hiClzQIbmjNAxKM0CDNNoAbSZoAKaTT3ASkY0MBoqSkAuacDRYBj01eaALHaon5NG4D1qaPrVALmng07gOfpTKQDv4hTsDdUsCRR6L%2BlTLBK38Bp9BjxCi%2F6yTb9KDLZx9t%2Fu1PYRFJqn8Me0L6KOKoS3jOf8KGBXZ80%2BPpUgOJooGFGaYhKSkMM0maACm5oQhKQ0wP%2F2QAAAAAAAAAAAAAAAAAAAABSEKM0vagBvrSpTAUtkUKaVhEiVM3FJiuNHWpAeCaRJAZuvFXcQL3kP%2B7ikWO32YH3ZiPdhTvtFoB8sX%2FfT5rOwtRrXyfwxp%2BVRNfykYDGqSF6kLzyN3qJmJ6mqKsQFqSqBEkdSVLGJRQMbRTEFJSEFJTASkpsQhptAE54BPWkJpjGe9JTGKKdigBQKQ0XsIb%2FAD9aUVIxTQF4ouIercU%2FO7HNIGKtOHQikSQGjfQixC%2FqadVNAxaTIpCE31G7UDG0qruNMCcLTqkQUYpANxRimIbSdaBi0lMBtBoAbSUxEpppq7gxlHFBSHj3pSQKkTQ%2F8ai6LwKQxoFPzimxhS0EoSpFPFAD6ctSITZUTxUkyiPvSZqgsG6kzQMSigCRFz1qwEAFS2Sw4pKkQUvFMBKbxT1ADSCmAE02gQlJmgdg3UmaAsf%2F2QAA"
    // IF THE ABOVE LINE DOES NOT WORK, TRY THIS:
    // const b64 = buf.toString('base64');
   // console.log(b64)
  //  const base64String = btoa(String.fromCharCode(...view));

    const mimeType = 'image/png'; // e.g., image/png


    //const content = new Uint8Array([137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 5, 0, 0, 0, 5, 8, 6, 0, 0, 0, 141, 111, 38, 229, 0, 0, 0, 28, 73, 68, 65, 84, 8, 215, 99, 248, 255, 255, 63, 195, 127, 6, 32, 5, 195, 32, 18, 132, 208, 49, 241, 130, 88, 205, 4, 0, 14, 245, 53, 203, 209, 142, 14, 31, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130]);

    
console.log(imagei.length)
  return (
  
    <div>
    <LazyLoadImage src={`data:image/*;base64,${b64}`}
     width={300} height={350} 
      alt={"Not getting images"}
    />
      </div>
  )
}

export default GetImage